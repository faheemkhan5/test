pipeline {

  environment {
    dockerimagename = "docreg.eprocure.gov.pk/test1"
    dockerImage = ""
  }

  agent any

  stages {

    stage('Build image') {
       dockerShell connector: [$class: 'DockerConnector', connectorType: 'OKHTTP', credentialsId: 'dockerserver', serverUrl: 'tcp://localhost:2345'], containerLifecycle: [createContainer: [bindAllPorts: false, bindPorts: '', command: '', cpusetCpus: '', cpusetMems: '', hostname: '', memoryLimit: 0, privileged: false, restartPolicy: [maximumRetryCount: 1, policyName: 'ALWAYS'], shmSize: 0, tty: false, user: '', workdir: ''], image: 'test', pullImage: [credentialsId: '', registriesCreds: [[credentialsId: '', registryAddr: 'https://docreg.eprocure.gov.pk']]]], executorScript: 'exec /root/docker-images/workspace/test5/script.sh', longConnector: [$class: 'DockerConnector', connectorType: 'OKHTTP', credentialsId: 'dockerserver', serverUrl: 'tcp://localhost:2345']
    }

    stage('Pushing Image') {
      environment {
               registryCredential = 'docker-reg'
           }
      steps{
        script {
          docker.withRegistry( 'https://docreg.eprocure.gov.pk', registryCredential ) {
            dockerImage.push("latest")
          }
        }
      }
    }

    stage('Deploying App to Kubernetes') {
      steps {
        script {
          kubernetesDeploy(configs: "website.yaml", kubeconfigId: "kubernetes")
        }
      }
    }

  }

}
