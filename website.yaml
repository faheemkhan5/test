apiVersion: apps/v1
kind: Deployment
metadata:
  name: test1
spec:
  selector:
    matchLabels:
      app: test1
  template:
    metadata:
      labels:
        app: test1
    spec:
      containers:
      - name: test1
        image: docreg.eprocure.gov.pk/test:${BUILD_NUMBER}
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80 
      imagePullSecrets:
       - name: acr-auth
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  creationTimestamp: "2023-02-18T18:27:10Z"
  name: nodejsapp
  namespace: default
  resourceVersion: "371309"
  uid: 0ad54f3a-bf53-4876-90f6-80a849586c60
spec:
  maxReplicas: 10
  metrics:
  - resource:
      requests:
        cpu:400
      name: cpu
      target:
        averageUtilization: 50
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nodejsapp
status:
  conditions:
  - lastTransitionTime: "2023-02-18T18:27:26Z"
    message: the HPA controller was able to get the target's current scale
    reason: SucceededGetScale
    status: "True"
    type: AbleToScale
  - lastTransitionTime: "2023-02-18T18:27:26Z"
    message: 'the HPA was unable to compute the replica count: failed to get cpu                                                                                                              utilization:
      unable to get metrics for resource cpu: unable to fetch metrics from resou                                                                                                             rce
      metrics API: the server could not find the requested resource (get pods.me                                                                                                             trics.k8s.io)'
    reason: FailedGetResourceMetric
    status: "False"
    type: ScalingActive
  currentMetrics: null
  currentReplicas: 1
  desiredReplicas: 0

--- 
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: test1
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
    nodePort: 32010
    
  selector:
    app: test1
  type: NodePort
status:
  loadBalancer: {}
  

